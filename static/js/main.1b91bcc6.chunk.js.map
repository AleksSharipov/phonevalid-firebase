{"version":3,"sources":["utils/config.js","components/actions/actions.js","Firebase.js","components/Form/Form.js","components/Table/Number.js","components/App/App.js","index.js","reducer/reducer.js"],"names":["config","code","country","flag","addPhone","text","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Form","useState","selectValue","setSelectValue","phone","setPhone","error","setError","dispath","useDispatch","onSubmit","e","preventDefault","res","database","ref","push","set","className","value","onChange","target","map","c","reg","minLength","maxLength","isNaN","Number","val","useSelector","state","update","setUpdate","snapshotToArray","snapshot","returnArr","forEach","childSnapshot","item","useEffect","a","on","resp","fetchData","Math","random","App","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b91bcc6.chunk.js","sourcesContent":["const config = [\r\n  {code:7, country:'Россия', flag: 'telephon__select_ru'},\r\n  {code:53, country:'Куба', flag: 'telephon__select_cu'},\r\n  {code:597, country:'Суринам', flag: 'telephon__select_s'},\r\n];\r\n\r\nexport {config};","const addPhone = (text) =>({\r\n    type: \"ADD_PHONE\", \r\n    text\r\n})\r\nexport default addPhone;","import firebase from 'firebase';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyBSLgJiy0MXe-2uei-02LTtMNclqvM0pbk\",\r\n  authDomain: \"validationphone-47a59.firebaseapp.com\",\r\n  databaseURL: \"https://validationphone-47a59-default-rtdb.firebaseio.com\",\r\n  projectId: \"validationphone-47a59\",\r\n  storageBucket: \"validationphone-47a59.appspot.com\",\r\n  messagingSenderId: \"1033885172743\",\r\n  appId: \"1:1033885172743:web:c1727ad6fe3468bdb596a2\"\r\n});\r\n\r\nexport default firebase;","import React, { useState} from 'react';\r\nimport { config } from '../../utils/config';\r\nimport { useDispatch} from 'react-redux';\r\nimport addPhone from '../actions/actions';\r\nimport firebase from '../../Firebase';\r\n\r\nconst Form = () => {\r\n  const [selectValue, setSelectValue] = useState('7');\r\n  const [phone, setPhone] = useState('');\r\n  const [error, setError] = useState(false)\r\n  // const val = useSelector(state => state);\r\n  const dispath = useDispatch();\r\n\r\n  const selectVal = e => {\r\n    setSelectValue(e.target.value);\r\n  }\r\n\r\n\r\n\r\n  const inpValue = e =>{\r\n    if(isNaN(e.target.value)){\r\n      setError(true)\r\n      e.target.value = '';\r\n    } else {\r\n      setError(false)\r\n      setPhone(e.target.value)\r\n    }\r\n   \r\n  }\r\n\r\n  const handleSetPhone = (e) =>{\r\n    e.preventDefault();\r\n    if(phone !== ''){\r\n      const res = dispath(addPhone(`${selectValue} ${phone}`));\r\n      const newPhone = firebase.database().ref('phone/').push();\r\n      newPhone.set(res) \r\n    }\r\n    \r\n    setPhone('')\r\n  }\r\n\r\n  const flag = () =>{\r\n    let flag;\r\n    config.map(c=>{\r\n      return selectValue == c.code ? flag  = c.flag : false;\r\n    })\r\n    return flag;\r\n  }\r\n\r\n  return (\r\n    <form \r\n      onSubmit={handleSetPhone}\r\n      className=\"telephon\" \r\n    >\r\n        <div className=\"telephon__input-form\">\r\n        <select value={selectValue} onChange={selectVal} className={`telephon__select ${flag()}`}>\r\n            {\r\n              config.map(reg =>{\r\n                return <option key={reg.country} value={reg.code}  >+{reg.code}</option>\r\n              })\r\n            }\r\n          </select>\r\n          <input \r\n            type=\"phone\" \r\n            className=\"telephon__input\"\r\n            minLength=\"3\" \r\n            maxLength=\"10\" \r\n            onChange={inpValue}\r\n            value={phone}\r\n          ></input>\r\n          \r\n        </div>\r\n        <p className={error ? `telephon__error-show`:`telephon__error`}>Можно использовать только цифры</p>\r\n        <button className=\"telephon__btn\">Отправить</button>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import React, {useEffect, useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport firebase from '../../Firebase';\r\n\r\n\r\nconst Number = () => {\r\n  const val = useSelector(state => state);\r\n\r\n  const [update, setUpdate] = useState([])\r\n  const snapshotToArray = (snapshot) => {\r\n    const returnArr = [];\r\n\r\n    snapshot.forEach((childSnapshot) => {\r\n        const item = childSnapshot.val();\r\n        // item.key = childSnapshot.key;\r\n        returnArr.push(item);\r\n    });\r\n\r\n    return returnArr;\r\n}\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async () => {\r\n      firebase.database().ref('phone/').on('value', resp =>{\r\n        setUpdate([]);\r\n        setUpdate(snapshotToArray(resp))\r\n      })\r\n    }\r\n    fetchData()\r\n  }, [val]);\r\n\r\n  \r\n  return(\r\n  <section className=\"table\">\r\n    <p className=\"table__text\">Телефон:</p>\r\n    <ul>\r\n      {\r\n        update.map(res =>{\r\n          return <li key={Math.random()} className=\"table__text\">+{res.text}</li>\r\n        })\r\n      }\r\n      </ul>\r\n  </section> \r\n)}\r\n\r\nexport default Number;\r\n","import Form from '../Form/Form';\nimport Number from '../Table/Number';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form/>\n      <Number/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport {Provider} from 'react-redux'\nimport { createStore } from 'redux';\nimport {phoneList} from './reducer/reducer';\n\nconst store = createStore(phoneList);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","export  const phoneList = (state = [], action) => {\r\n  switch(action.type) {\r\n    case \"ADD_PHONE\":\r\n      return [...state, {text:action.text}]\r\n    default : return state\r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}